__file__ = "笔记"

"""（一）基本概念和术语
数据结构：数据结构是相互之间存在一种或多种特定关系的数据元素的集合。
数据：是对客观实物的符号表示。在计算机科学中指所有能够输入到计算机中并被计算机程序处理的符号的总称。
数据元素：是数据的基本单位。
数据对象：是性质相同的的数据元素的集合，是数据的一个子集。

数据元素相互之间的关系称为结构。4类基本结构：集合、线性结构、树形结构、图形结构。
Data_structure = (D, S)  // D是数据元素的有限集，S是D上关系的有限集
复数：Complex = (C, R)  // C为两个实数的集合{c1, c2}，R={P}，P是定义在集合C上的一种关系，即c1是复数的实部，c2是复数的虚部
简单事物管理：Group = (P, R) // P={T,G1,..,Gn,S11,..,Snm}, R={R1, R2}, R1={<T, Gi>}, R2={<Gi, Gij>}, 1 <= n <= 3, 1 <= m <= 2  // 可以描述为一位导师管理3位研究生，而每位研究生管理两位学生

逻辑结构：数据元素之间的逻辑关系
数据结构在计算机中的映象，称为物理结构，也称春存储结构。包括数据元素的表示和关系的表示。  
在计算机中表示信息的最小单位是二进制位的一位，叫bit位。我们可以用一个由若干位组合起来形成的一个位串表示一个数据元素（常见：一个字长的位表示一个整数，用8位二进制数表示一个字符串），通常称这个位串为元素或节点。当数据元素（位串）是由若干数据项组成的时候，位串中对应各个数据项的子位串称为数据域，因此元素或节点可以看成是数据元素在计算机中的映象。
关系在计算机中有两种不同的表示方法：顺序映象和非顺序映象，对应顺序存储结构和链式存储结构。顺序映象特点是借助元素在存储器中的相对位置来表示数据元素之间的逻辑关系。非顺序映象的特点是借助指示元素存储地址的指针的指针来表示数据元素之间的逻辑关系。

数据类型：最早出现在高级程序语言中，描述操作对象的特性。每种数据类型都明显或隐含的规定了程序执行期间变量或表达式所有可能取值的范围，以及在这些值上允许进行的操作。因此
数据类型是某一类值的集合和定义在这个值集上的一组操作的总称。

某种意义上，数据结构可以看成是一组具有相同结构的值，而结构类型可以看成是一种数据结构和定义在其上的一组操作组成。
高级程序语言中数据类型可分为两类：非结构的原子类型、结构类型。原子类型是不可分解的，是最基本的类型。结构类型的值是由若干成分按某种结构组成的，是可拆解的，组成他的成分，可以是非结构的，也可以是结构的。
抽象数据类型，是指一个数学模型以及定义在该模型上的一组操作。如：不同计算机上的整数类型是一个抽象数据类型。因为尽管他们实现的方法可能不能，但他们所表达的含义，对于用户来说是相同的。因此是一个抽象类型。那么抽象的意义就在于数据类型的数学抽象特性。
抽象数据类型的定义由一个值域和定义在该值域上的一组操作组成。根据值的不同特性，可分为：原子类型、固定聚合类型、可变聚合类型。
原子类型：不可分子。
固定聚合类型：由确定数目的成分按某种结构组成。如复数由两个实数依确定的次序关系组成。
可变聚合类型：其值的成分的数目是可变的。
(D, S, P) // D数数据对象，S是D上的关系集，P是对D的基本操作集

多行数据类型：指其值的成分不确定的数据类型，如某一数组，其每一子元素都可以不同，但从抽象数据类型的角度看，是具有相同的数学特性的，故称之为多行数据类型。


算法：是对特定问题的求解步骤的一种描述。包含5个特征：有穷性、确定性、可行性、输入、输出
算法设计的要求：正确性、可读性、健壮性、效率与低存储需求
算法执行时间需要通过依据该算法编制的程序在计算机上运行时所消耗的时间来度量。算法效率的度量：
1、事后统计方法：计算机有计时模块，不同的算法可以通过一组或若干组相同的统计数据来分辨优劣。有两个缺陷：必须先运行依据算法所编制的程序，2是时间的统计结果依赖与计算机的硬件、软件等环境因素。
2、事前分析估算的方法：高级程序语言在计算机上运行时所消耗的时间取决于下列因素：
依据的算法选用何种策略
问题的规模，列入是100以内的素数还是1000以内
书写程序的语言，级别越高，执行效率越低
编译程序所产生的机器代码的质量
机器执行指令的速度

撇开硬件、软件的因素，一个特定的算法，其运行工作量的大小，只依赖于问题的规模，或者说他是问题规模的函数
一个算法由控制结构（顺序、分支、循环三种）和原操作（固有数据类型的操作）构成。为了便于比较同一问题的不同算法，通常做法是从算法中选取一种对于所研究问题来说是基本操作的原操作，以该基本操作重复执行的次数作为算法的时间度量。例如：一个NxN矩阵算法，在这里乘法运算是矩阵相乘问题中的基本操作，整个算法的执行时间与该操作的重复执行慈湖n3成正比，记作T(n)=O(n3)
也叫时间复杂度。其中，原操作应是，其重复执行次数和算法的执行时间成正比的原操作，多数情况下是最深层循环内的语句中的原操作，他的执行次数和包含它的语句的频度相同。语句的频度是指该语句重复执行的次数。{++x;s=0;}时间复杂度为O(1)，for(i=1;i<n;++i){++x;s+=x}时间复杂度为O(n)，for(i=i<n){for(i<n)}时间复杂度为O(n2)
for(i=2;i<=n){for(j=2;j<=i-1)}这种算法的频度是(n-1)(n-2)/2

空间复杂度作为算法所需存储空间的度量，记作S(n)=O(f(n))
"""